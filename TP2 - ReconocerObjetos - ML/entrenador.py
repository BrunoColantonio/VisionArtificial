from joblib import dump
from sklearn import tree
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score


# Dataset
X = [
    [0.1662730307284449,0.00040325782830454926,3.6076222525597664e-05,4.6035381997472004e-07,-1.849356714811312e-12,-7.192912339889493e-09,3.154426545998478e-13],
    [0.16629033067875937,0.00039487095364393115,3.713294490205058e-05,5.161707860143053e-07,-2.2231176255588766e-12,-8.384216149770837e-09,4.0551191813099713e-13],
    [0.16631485402606538,0.00020463616474818196,1.4501086247628162e-05,1.9445378678614522e-08,1.0083086754597154e-14,4.093937080830787e-11,2.225776230390166e-15],
    [0.15963074979908426,0.00010779326497794824,1.5880129431365264e-06,3.1565044106033633e-09,-1.4698799010950207e-16,-2.2233129536641087e-11,1.683370763621059e-16],
    [0.15974766474266178,8.747672820603799e-05,1.9278890687546637e-05,2.136653189262498e-08,-5.864144625927194e-15,-1.6148594992348114e-12,1.2396228793808155e-14],
    [0.15985719182271532,0.00012571230300186274,1.7555599784049863e-05,4.214392025590059e-08,-1.7266621531315434e-14,-3.187926090719432e-10,-3.187380944487964e-14],
    [0.1916113790699636,0.0003938305739626189,0.0042609750395387926,1.4351416517840543e-05,-2.0455783443093777e-09,-1.6507987394272378e-07,2.9000806663471473e-09],
    [0.19185514272128185,0.0003855082368906927,0.004304139655204652,1.3928397570355538e-05,-2.7828535811700242e-09,-2.178399987321219e-07,1.9712931082786753e-09],
    [0.18419827228855495,0.0008211714580663794,0.002874593985345111,1.8347282570390798e-05,-2.010534876617275e-09,-3.8295005550003135e-07,-3.702913370830851e-09],
    [0.1658408847821317,0.0003170091316955791,4.350761307896556e-05,9.017113341105794e-07,-5.635129814931182e-12,-1.5519013824318017e-08,-3.789912727238283e-13],
    [0.16562418826927922,9.330889284366228e-05,7.991988017597939e-05,6.237605331937602e-07,4.394171581525236e-12,2.7904243777933977e-10,-2.9511358475048597e-13],
    [0.1665812846672638,0.00012310535465896857,3.984767254008672e-05,1.0107591622990139e-06,6.347409022377345e-12,3.880140112758406e-09,-9.263594599618595e-13],
    [0.15956467710591282,9.942946958448013e-05,4.71377648473178e-06,3.935015415880617e-09,-5.353870575128928e-16,-3.6284309920405654e-11,2.4010009903093953e-17],
    [0.1596004036114871,0.00011291561744135102,4.213412790364081e-06,3.6846122516124662e-09,-4.4558309461276245e-16,-3.3385507067813195e-11,1.105712067604199e-16],
    [0.15987446265290534,0.0001288012893247923,1.8522792505811616e-05,4.245369299020734e-08,6.186234490658253e-16,-1.4367127275442485e-10,3.7641576196771455e-14],
    [0.1872639829161806,0.001032717829581265,0.0033138839556787034,4.222682258259688e-05,1.547041084300513e-08,1.2809139491329935e-06,-3.1913552298547625e-09],
    [0.1864377662466425,0.0010019569048483818,0.003190935776666404,3.745902841156559e-05,1.2915809782679419e-08,1.1765818487091797e-06,-9.502179711430485e-10],
    [0.18670861793388355,0.0004940872444548233,0.00340411736872169,1.0823715408696188e-05,-1.896948270123463e-09,-2.1655904125654242e-07,-8.474112872001251e-10],
    [0.1655925388763371,8.040222514182893e-05,1.9822862729120566e-05,3.807688279351264e-07,8.771179456308761e-13,2.9111223800285994e-09,5.700874742701129e-13],
    [0.16746750430528337,0.0003874860261337207,8.19894511560796e-05,2.064934228890525e-06,-2.679135036541844e-11,-2.703932022342017e-08,-2.0304908050435583e-12],
    [0.16587036259284038,0.00033914257564222655,4.136460418539098e-05,5.980495010158633e-07,-2.4557640492229522e-12,-1.069556143196864e-08,1.6784291014719881e-12],
    [0.1657405990138838,7.738080823738644e-05,9.266325219998749e-06,1.9683538147287203e-07,2.609065895696497e-13,1.730163720915885e-09,5.0939314471775796e-14],
    [0.16007719633233292,0.0002472496985015626,1.153103682354023e-06,3.595540412470279e-09,-1.6075159293017109e-16,-4.067930728722902e-11,1.6660865261262375e-16],
    [0.16065956086956398,0.00043566857995831965,1.3776498401420151e-06,5.924334662501209e-09,-5.08660613235762e-16,-1.187760810247904e-10,1.6649373961034015e-16],
    [0.15941880421313773,6.146372898921481e-05,1.7009554840828908e-06,1.122000231936364e-09,-3.102744572935302e-17,-7.865730248065254e-12,-3.794527682859431e-17],
    [0.15970767254677154,3.0889245772265666e-05,3.0695236422223124e-05,7.507354169420763e-09,-2.7310904136697374e-15,-4.129748387261877e-11,2.3513461389314293e-15],
    [0.1916359211259093,0.0004632199080778585,0.004242840984921757,1.7093275087164975e-05,-4.441015825137183e-09,-3.5970243479821565e-07,1.2113870872998717e-09],
    [0.1870389331504746,0.0012236294676271913,0.003196437579697673,4.1670955564200865e-05,8.372565244434748e-09,4.181981891810603e-07,-1.2696272834158504e-08],
    [0.18434854443780851,9.076829695237688e-05,0.003174783589158352,2.4350193678479804e-06,-8.623492112601554e-11,-1.0143530111381413e-08,1.9596195367956806e-10],
    [0.1855719063433206,0.0013556891091378452,0.0028986561989843783,2.7899191372799293e-05,-3.6224488153140315e-09,-6.896936624612138e-07,-7.0586372645732456e-09]
    ]

# Tags
Y = [1,1,1,2,2,2,3,3,3,1,1,1,2,2,2,3,3,3,1,1,1,1,2,2,2,2,3,3,3,3]

# Training
X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.2, random_state=99)
clasificator = tree.DecisionTreeClassifier(criterion="entropy",max_depth=2,min_samples_split=4,min_samples_leaf=2)
clasificator.fit(X_train, y_train)
y_pred = clasificator.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy}')

# Save model
dump(clasificator, 'shapes_model.joblib')

